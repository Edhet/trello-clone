name: trello_clone
services:
    mongodb:
      container_name: mongodb
      image: mongo
      restart: unless-stopped
      ports: 
        - ${DB_PORT}:27017
      environment:
        - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
        - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
        - MONGO_INITDB_DATABASE=trello-clone
      volumes:
        - mongo-data:/data/db
      healthcheck:
        test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet | grep 1
        interval: 30s
        timeout: 10s
        retries: 5

    mongo-express:
      image: mongo-express
      restart: unless-stopped
      ports:
        - 8081:8081
      environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USER}
        ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASSWORD}
        ME_CONFIG_MONGODB_URL: mongodb://${DB_USER}:${DB_PASSWORD}@mongodb:${DB_PORT}/trello-clone?authSource=admin

        ME_CONFIG_BASICAUTH: false

    backend:
        container_name: backend
        build:
            context: ./back
            dockerfile: ./Dockerfile
        ports:
            - 8080:8080
        environment:
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_PORT=${DB_PORT}
            - DB_URL=mongodb
            - JWT_PASSWORD=${JWT_PASSWORD}
        depends_on:
          mongodb:
            condition: service_healthy
    
    vue-app:
      build: 
          context: ./front
          dockerfile: ./Dockerfile
      ports:
        - "5173:5173"
      volumes:
        - ./front:/app
        - /app/node_modules
      environment:
        - NODE_ENV=development


volumes:
  mongo-data:
    driver: local
    